/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventanas;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
//import static ventanas.Aplicacion2.pwdClave;
//import static ventanas.Aplicacion2.trRegistros;
//import static ventanas.Aplicacion2.txtUser;
//import static ventanas.Aplicacion2.txthost;

/**
 *S
 * @author Erick
 */
public class Index extends javax.swing.JFrame {

    /**
     * Creates new form Index
     */
    Metodos m = new Metodos();
    private Connection conn;
    private Statement st;
    private String mensaje = "";
    boolean row_is_selected = false;
    int index;
    public Index() {
        initComponents();
    this.setLocationRelativeTo(null);//Pone a la aplicacion en el medio de la pantalla
        this.getContentPane().setBackground(Color.WHITE);//Cambia el color del JFrame
        txtUser.setText("JBPAI");
        //txtUser.setEditable(false);
        pwdClave.setText("jbpai");
        //pwdClave.setEditable(false);
        txthost.setText("ORCL");
        //txthost.setEditable(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pIngreso1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        pwdClave = new javax.swing.JPasswordField();
        jLabel7 = new javax.swing.JLabel();
        txthost = new javax.swing.JTextField();
        btnIngreso1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pIngreso1.setBorder(javax.swing.BorderFactory.createTitledBorder("Conexion"));

        jLabel5.setText("Username:");

        jLabel6.setText("Password:");

        jLabel7.setText("Database:");

        btnIngreso1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos2/base-de-datos.png"))); // NOI18N
        btnIngreso1.setText("CONECTAR");
        btnIngreso1.setMinimumSize(new java.awt.Dimension(85, 25));
        btnIngreso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngreso1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pIngreso1Layout = new javax.swing.GroupLayout(pIngreso1);
        pIngreso1.setLayout(pIngreso1Layout);
        pIngreso1Layout.setHorizontalGroup(
            pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIngreso1Layout.createSequentialGroup()
                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pIngreso1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pIngreso1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txthost, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pIngreso1Layout.createSequentialGroup()
                                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pwdClave, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(pIngreso1Layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(btnIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        pIngreso1Layout.setVerticalGroup(
            pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pIngreso1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pwdClave, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pIngreso1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pIngreso1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(txthost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(btnIngreso1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pIngreso1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pIngreso1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngreso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngreso1ActionPerformed
        Aplicacion2 ap = new Aplicacion2();
        ap.setVisible(true);
        this.dispose();
        //        conn = conexion(txtUser.getText(), pwdClave.getText(), txthost.getText());
        //        if (!(conn + "").equals("null")) {
            //            try {
                //                st = conn.createStatement();
                //            } catch (SQLException e) {
                //            }
            ////            DefaultMutableTreeNode raiz = new DefaultMutableTreeNode("EST_INSTITUCIONAL");
            ////            trRegistros.setModel(modeloArbol("EST_INSTITUCIONAL", raiz, 1, 0, "null"));
            ////            trRegistros.setSelectionRow(0);
            //
            //        } else {
            //        }
    }//GEN-LAST:event_btnIngreso1ActionPerformed
private Connection conexion(String usuario, String clave, String base) {
        try {
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
            Connection connection;
            if (base.equals("ORCL1")) {
                connection = DriverManager.getConnection("jdbc:oracle:thin:@10.24.8.85:1521:orcl", usuario, clave);
            } else {
                connection = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:" + base, usuario, clave);
            }
            connection.setAutoCommit(false);
            mensaje = "Conexi√≥n exitosa.";
            return connection;
        } catch (SQLException e) {
            mensaje = e.getMessage();
            return null;
        }
    }
 private DefaultTreeModel modeloArbol(String nomTabla, DefaultMutableTreeNode raiz, int nivelDepto, int contador, String idDepto) {
        DefaultTreeModel modelo = new DefaultTreeModel(raiz);
        try {
            ArrayList<Registros> departamentos = obtenerTablaRecursiva(nomTabla);
            String n = nivelDepto + "";
            for (Registros depto : departamentos) {
                if (depto.getRegidtro4().equals(n) && (depto.getRegidtro2() + "").equals(idDepto)) {
                    //System.out.println(depto.getRegidtro1()+", "+depto.getRegidtro2()+", "+depto.getRegidtro3()+", "+depto.getRegidtro4()+", "+depto.getRegidtro5());
                    DefaultMutableTreeNode nivel1 = new DefaultMutableTreeNode(depto.getRegidtro1() + " " + depto.getRegidtro3());
                    modelo.insertNodeInto(nivel1, raiz, contador);
                    contador++;
                    modeloArbol(nomTabla, nivel1, (nivelDepto + 1), 0, depto.getRegidtro1());
                }
            }
        } catch (Exception e) {
        }

        return modelo;
    }
   private ArrayList<Registros> obtenerTablaRecursiva(String nomTable) {
        ArrayList<Registros> listaDepartamentos = new ArrayList<Registros>();
        try {
            String ID = "";
            String IDP = "";

            ResultSet rs = st.executeQuery("select column_name from all_tab_columns where table_name = '" + nomTable + "'");
            int cont = 0;
            while (rs.next()) {
                if (cont == 0) {
                    ID = rs.getString(1);
                }
                if (cont == 1) {
                    IDP = rs.getString(1);
                }
                cont++;
            }

            rs = st.executeQuery("select * from " + nomTable + " start with " + IDP + " is null connect by prior " + ID + "=" + IDP);
            Registros departamento = null;
            while (rs.next()) {
                if (cont == 1) {
                    departamento = new Registros(rs.getString(1));
                } else if (cont == 2) {
                    departamento = new Registros(rs.getString(1), rs.getString(2));
                } else if (cont == 3) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3));
                } else if (cont == 4) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4));
                } else if (cont == 5) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5));
                } else if (cont == 6) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6));
                } else if (cont == 7) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7));
                } else if (cont == 8) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8));
                } else if (cont == 9) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9));
                } else if (cont == 10) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10));
                } else if (cont == 11) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11));
                } else if (cont == 12) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12));
                } else if (cont == 13) {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13));
                } else {
                    departamento = new Registros(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), rs.getString(11), rs.getString(12), rs.getString(13), rs.getString(14));
                }
                listaDepartamentos.add(departamento);
            }
            rs.close();
            //st.close();
            mensaje = "Select exitoso.";
            return listaDepartamentos;
        } catch (SQLException ex) {
            mensaje = ex.getMessage();
            return null;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIngreso1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel pIngreso1;
    public static javax.swing.JPasswordField pwdClave;
    public static javax.swing.JTextField txtUser;
    public static javax.swing.JTextField txthost;
    // End of variables declaration//GEN-END:variables
}
